substitutions:
  _PROJECT_ID: "$PROJECT_ID"
  _REPO_NAME: "static-ip-test2"
  _SERVICE_NAME: "cloudrun-dev"
  _IMAGE: "image-cloudrun-dev2"
  _REGION: "asia-south1"  

steps:
  # Step 1: Create the Artifact Registry repo (if it doesn't exist)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        gcloud artifacts repositories describe ${_REPO_NAME} --location=${_REGION} || \
        gcloud artifacts repositories create ${_REPO_NAME} --repository-format=docker --location=${_REGION} --quiet
    id: 'create-repo'

  # Step 2: Configure Docker authentication with Artifact Registry
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud auth configure-docker ${_REGION}-docker.pkg.dev
    id: 'docker-auth'
    wait_for: ['create-repo']

  # Step 3: Build the Docker image using BuildKit
  - name: 'gcr.io/cloud-builders/docker'
    env:
      - 'DOCKER_BUILDKIT=1'
    args:
      [
        'build',
        '--progress=plain',
        '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE}:$COMMIT_SHA',
        '.'
      ]
    id: 'build'
    wait_for: ['docker-auth']

  # Step 4: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE}:$COMMIT_SHA'
      ]
    id: 'push'
    wait_for: ['build']

  # Step 5: Deploy the image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'run', 'deploy', '${_SERVICE_NAME}',
        '--image', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_IMAGE}:$COMMIT_SHA',
        '--platform', 'managed',
        '--region', '${_REGION}',
        '--allow-unauthenticated'
      ]
    id: 'deploy'
    wait_for: ['push']

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true
timeout: "900s"
